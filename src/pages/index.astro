---
import GameCard from "../components/GameCard.astro";
import BaseLayout from "../layouts/BaseLayout.astro";
import { getCollection } from "astro:content";

const games = await getCollection("games");
const countGames = games.length;
---

<style>
	.game-list {
		display: grid;
  		grid-template-columns: repeat(auto-fill, 300px);
  		justify-content: space-around;
	}

</style>
<script>
	const searchNode = document.getElementById("game-search") as HTMLInputElement;
	if (searchNode) {
		const games = document.querySelectorAll("[data-title]") as NodeListOf<HTMLDivElement>;
		searchNode.addEventListener("keyup", (event) => {
			if (event.target) {
				const target = event.target as HTMLInputElement;
				const searchString = target.value;
				searchGame(searchString, games);
			}
		});

		searchGame(searchNode.value, games);
	}

	function searchGame(searchString: string, games: NodeListOf<HTMLDivElement>) {		
		
		games.forEach((game) => {
			if (
				searchString === "" ||
				(
					game.dataset.hasOwnProperty('title')
					&& game.dataset.title.toLowerCase().includes(searchString.toLowerCase())
				)
			) {
				game.classList.remove("d-none");
			} else {
				game.classList.add("d-none");
			}
		});			
	}
</script>
<BaseLayout>
	<div>
		<label for="game-search">Search</label>
		<input id="game-search" type="text" />
	</div>
	<div class="game-list">
		{
			games.map((game, index, games) => (
				<GameCard
					shortName={game.slug}
					gameTitle={game.data.title}
					prevGameLink={games[index - 1]}
					nextGameLink={games[index + 1]}
				/>
			))
		}
	</div>
</BaseLayout>
